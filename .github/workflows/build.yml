name: Build MyModuleLib

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Download LLVM tarball
      - name: Download LLVM tarball
        run: wget https://github.com/llvm/llvm-project/releases/download/llvmorg-19.1.0-rc4/LLVM-19.1.0-rc4-Linux-X64.tar.xz

      # Extract LLVM tarball
      - name: Extract LLVM tarball
        run: tar -xf LLVM-19.1.0-rc4-Linux-X64.tar.xz

      # Install Clang, CMake, and other dependencies
      - name: Install dependencies
        run: |
          sudo apt install build-essential
          sudo apt update
          sudo apt install clang-18
          sudo apt-get install clang-tools-18
          sudo apt-get install ninja-build

      # Create a build directory
      - name: Create build directory
        run: |
          mkdir -p build_0
          mkdir -p build_1

      # Configure the CMake project using Clang
      - name: Configure with CMake 0
        run: |
          cd build_0
          cmake -DDEFINE_IN_CLASS=0 -DCMAKE_C_COMPILER=$(pwd)/../LLVM-19.1.0-rc4-Linux-X64/bin/clang -DCMAKE_CXX_COMPILER=$(pwd)/../LLVM-19.1.0-rc4-Linux-X64/bin/clang++ -G "Ninja Multi-Config" -DCMAKE_BUILD_TYPE=Release ..

      # Build the project
      - name: Build the project0
        run: |
          cd build_0
          cmake --build_0 .

      # Configure the CMake project using Clang
      - name: Configure with CMake 1
        run: |
          cd build_1
          cmake -DDEFINE_IN_CLASS=1 -DCMAKE_C_COMPILER=$(pwd)/../LLVM-19.1.0-rc4-Linux-X64/bin/clang -DCMAKE_CXX_COMPILER=$(pwd)/../LLVM-19.1.0-rc4-Linux-X64/bin/clang++ -G "Ninja Multi-Config" -DCMAKE_BUILD_TYPE=Release ..

      # Build the project
      - name: Build the project1
        run: |
          cd build_1
          cmake --build_1 .
		  